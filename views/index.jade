h2(align="center") Project Dashboard
script
  $(document).ready(function() {
    $.getJSON('/git/commits/by-time', function(data) {
      var filtered = {};	 
      for(var date in data) {
        if(data[date] > 0) {
          filtered[date] = data[date];	  
        } 	
      }    

      var commits = _(filtered).map(function(numberOfCommits) { return numberOfCommits; });
      var ticks = _(filtered).map(function(_, time) { 
        var match = time.toString().match(/(\\d\\d:00)(?=.*GMT)/g);
        return time.toString().match(/(\\d\\d:00)(?=.*GMT)/g).join("-"); 
      })

      $.jqplot('chart1', [commits], {
        seriesDefaults:{
          renderer:$.jqplot.BarRenderer, pointLabels:{show:true, stackedValue: true},
          rendererOptions: {fillToZero: true}
        }, 
        axes : {
          yaxis : { padMin : 0, pad: 1.1, min:0, tickOptions:{ formatString:'%.0f' } },
          xaxis : { padMin : 0, ticks : ticks, renderer: $.jqplot.CategoryAxisRenderer }	  
        }
      });
    });

    $.getJSON('/git/commits/by-day', function(data) {
      var commits = _(data).map(function(numberOfCommits) { return numberOfCommits; });
      var ticks = _(data).map(function(_, day) { return day; })

      $.jqplot('chart2', [commits], {
        seriesDefaults:{
          renderer:$.jqplot.BarRenderer, pointLabels:{show:true, stackedValue: true},
          rendererOptions: {fillToZero: true}
        }, 
        axes : {
          yaxis : { padMin : 0, pad: 1.1, min:0, tickOptions:{ formatString:'%.0f' } },
          xaxis : { padMin : 0, ticks : ticks, renderer: $.jqplot.CategoryAxisRenderer }	  
        }
      });
    });



    LinesOfCodeGraph().init();
    $("#pairing-metrics-tab").parent().css("background", "#66ccff")
    $("#graphs-tab").click(function() {
      $("#pairing-metrics-tab").parent().css("background", "#efefef");
      $(this).parent().css("background", "#66ccff");
     $("#graphs").show();
     $("#pairing-metrics").hide();
    });
   
    $("#pairing-metrics-tab").click(function() {
      $("#graphs-tab").parent().css("background", "#efefef")
      $(this).parent().css("background", "#66ccff");
     $("#graphs").hide();
     $("#pairing-metrics").show();
    });
   
   
   $.getJSON('git/pairs', function(data) {
     var sortedPairs = [];
     $.each(data, function(date, pairs) {
       sortedPairs.push({date : date, pairs : pairs});
     });
     sortedPairs = _.sortBy(sortedPairs, function(obj){ return new Date(obj.date) * -1; });
   
     var html = "<table><tr><th>Date</th><th>Pairs</th><th>Commits</th><th>Per Pair</th></tr>";
     $.each(sortedPairs, function(index, day) {
       _.sortBy(day.pairs, function(pair) { return pair.commits * -1; })[0]["status"] = "top-pair";
       var date = day.date, pairs = day.pairs;
       var commits = 0;
       html += "<tr><td>" + date + "</td><td>";
       $.each(pairs, function(_, pair) {	 
         if(!pair.status) pair.status = "normal";
         html += "<span class='" + pair.status + "'>" + pair.person1 + "/" + pair.person2 + " (" + pair.commits + ")</span> ";
         commits += pair.commits;
       });
       html += "</td><td>" + commits + "</td><td>" + (commits/pairs.length).toFixed(2) +  "</td></tr>";
     });
     html += "</table>"
     $("#summary").html(html);
   });
   
    $.getJSON('/git/people', function(data) {
      var sortedPeople = [];
      $.each(data, function(a, person) {
        sortedPeople.push(person);
      });
      sortedPeople = sortedPeople.sort();
   
      var people = "<ul class='menu'>";
      $.each(sortedPeople, function(key, person) {
          people += "<li><a id='person-" + person +  "' href='#'>" + person + "</a></li>";
          $("#person-" + person).live('click', function() {
            $("#summary").hide();
            $("[id*='person']").parent().css("background", "#efefef")
            $(this).parent().css("background", "#66ccff");
   
            $.getJSON('/git/pairs/' + person, function(data) {
              var pairs = Pairs(data);
              var pairCount = pairs.grid;
              var maxPairCount = pairs.mostPairings();
   
              var pairingGrid = PairingGrid();
              pairingGrid.addHeading(["Person", "Times Paired", "Number of Commits", "Commits per pairing", "Last paired"])
   
              var timesPaired = "";
   
              $.each(pairCount, function(person, options) {
                var fontSize = (options.timesPaired / maxPairCount) * 100;                
                timesPaired += "<span style='font-size:" + fontSize + "px; padding:4px;'>" + person + "</span> ";     
                pairingGrid.addRow([person, options.timesPaired, options.numberOfCommits, (options.numberOfCommits/options.timesPaired).toFixed(2), options.lastPaired]);
              });
   
              pairingGrid.addRow(["Total", pairs.totals.timesPaired, pairs.totals.commits, pairs.totals.commitsPerPairing, "-"])				
              $("#timespaired").html(timesPaired);
              $("#whotheypairedwith").html(pairingGrid.draw());
            });
   
          });
      });
      people += "</ul>"
      $("#pairs").html(people);
    });

  });

div(align="center")
  ul(class="menu")
    li 
      a(href="#", id="pairing-metrics-tab") Pairing Metrics
    li 
      a(href="#", id="graphs-tab") Graphs
  div(id="pairing-metrics")
    div(id="pairs",align="left")
    div(id="summary", align="left")
    div(id="timespaired",align="left")    
    div(id="whotheypairedwith", align="left")
    div(id="chart1", style="height:800px;width:1200px;")
    div(id="chart2", style="height:800px;width:1200px;")

  div(id="graphs", style="display:none;")
    canvas(id="git", width="1000", height="800")
      [Please wait...]
    canvas(id="git-ratio", width="1000", height="800")
      [Please wait...]
    canvas(id="go", width="1000", height="800")
      [Please wait...]
